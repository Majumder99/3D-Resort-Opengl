Cube all_cubes[] = { cube_grass , cube_coffee , cube_pillar, cube_table, cube_tiles, cube_wood, cube_table_top, cube_tent_wall, cube_pool, cube_door, cube_door_2, cube_soil };


//design use to wall
//const int numSegments = 10; // Number of segments
//const float totalBendAngle = 45.0f; // Total bend in degrees
//float segmentBend = totalBendAngle / numSegments; // Bend per segment

//for (int i = 0; i < numSegments; i++) {
//	// Position and scale each segment
//	translateMatrix = glm::translate(identityMatrix, glm::vec3(16.0f, 0.3 + 0.1f * i, 5.0f));
//	scaleMatrix = glm::scale(identityMatrix, glm::vec3(0.1f, 0.1f, 1.3f)); // Scale to make each segment small

//	// Rotate each segment
//	rotateMatrix = glm::rotate(identityMatrix, glm::radians(segmentBend * i), glm::vec3(1, 0, 0)); // Rotate around X-axis

//	// Combine transformations and draw each segment
//	model = translateMatrix * rotateMatrix * scaleMatrix;
//	all_cubes[3].drawCubeWithTexture(ourShader, moveMatrix * model);
//}